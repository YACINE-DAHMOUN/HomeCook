security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        # Firewall pour l'authentification (login/register) - pas de JWT requis
        api_auth:
            pattern: ^/api/auth/(login|register)
            stateless: true
            # Pas de jwt: ~ ici car on n'a pas encore de token
            
        # Firewall pour le reste de l'API - JWT requis via cookie
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    access_control:
        # Routes d'auth accessibles sans authentification
        - { path: ^/api/auth/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/refresh, roles: PUBLIC_ACCESS }
        - { path: ^/api/recipes$, roles: PUBLIC_ACCESS, methods: [GET] }
        - { path: ^/api/recipes/\d+$, roles: PUBLIC_ACCESS, methods: [GET] }


        # Le reste de l'API n√©cessite une authentification
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/recipes, roles: ROLE_USER, methods: [POST, PUT, DELETE] }
